@model IEnumerable<ExpensesTracker.Models.Expense>

<div class="container my-5">
    <h3 class="mb-4 text-center fw-bold text-primary-emphasis">My Expenses</h3>

    <div class="table-responsive shadow-sm rounded">
        <table class="table table-hover align-middle">
            <thead class="table-primary">
                <tr>
                    <th scope="col">Description</th>
                    <th scope="col">Amount (AED)</th>
                    <th scope="col">Category</th>
                    <th scope="col">Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Description</td>
                        <td>@item.Amount.ToString("0.00")</td>
                        <td>@item.Category</td>
                        <td>@item.Date.ToString("yyyy-MM-dd")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@* <h2>Expenses Overview</h2>
<div>
    <canvas style="max-width: 450px; max-height:450px;" id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');

    fetch('/Expenses/GetChart')
        .then(response => response.json())
        .then(data => {
            new Chart(ctx, {
                  type: 'pie',
                  data: {
                    labels: data.map(d =>d.category),
                    datasets: [{

                      data: data.map(d => d.total),
                    }]
                  },

            });

        })
</script> *@